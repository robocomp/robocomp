name: Publish Docker images

on: push
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: robocomp/robocomp
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Docker meta
        id: meta2
        uses: docker/metadata-action@v3
        with:
          images: robocomp/robocomp
          tags: |
            type=ref,prefix=latest_, event=branch


      - uses: docker/setup-buildx-action@v1
        id: dependencies-builder   

      - uses: docker/setup-buildx-action@v1
        id: base-builder

      - uses: docker/setup-buildx-action@v1
        id: dsr-builder

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build against dependencies-builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.dependencies-builder.outputs.name }}
          context: docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}__dependencies, ${{ steps.meta2.outputs.tags }}__dependencies
          labels: ${{ steps.meta.outputs.labels }}
          build-args:  |
            base_image=nvidia/opengl
            base_tag=base-ubuntu20.04
            branch=${{ steps.extract_branch.outputs.branch }}
            robocomp_version=dependencies

      - name: Build against base-builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.base-builder.outputs.name }}
          context: docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}__base, ${{ steps.meta2.outputs.tags }}__base
          labels: ${{ steps.meta.outputs.labels }}
          build-args:  |
            base_image=nvidia/opengl
            base_tag=base-ubuntu20.04
            branch=${{ steps.extract_branch.outputs.branch }}
            robocomp_version=base

      - name: Build against dsr-builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.dsr-builder.outputs.name }}
          context: docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}__dsr, ${{ steps.meta2.outputs.tags }}__dsr
          labels: ${{ steps.meta.outputs.labels }}
          build-args:  |
            base_image=nvidia/opengl
            base_tag=base-ubuntu20.04
            branch=${{ steps.extract_branch.outputs.branch }}
            robocomp_version=dsr


