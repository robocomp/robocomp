#Download base image ubuntu 20.04
FROM ubuntu:focal as build

# Disable Prompt During Packages Installation
ARG DEBIAN_FRONTEND=noninteractive

# Update Ubuntu Software repository
RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates \
      cmake \
      curl \
      freeglut3-dev \
      g++ \
      gcc-multilib \
      git \
      git-annex \
      libboost-dev \
      libboost-system-dev \
      libboost-thread-dev \
      libgsl-dev \
      libopenscenegraph-dev \
      libqt5xmlpatterns5-dev \
      libqt5opengl5-dev \
      libzeroc-icestorm3.7 \
      make \
      python3 \
      python3-argcomplete \
      python3-pip \
      python3-distutils \
      python3-prompt-toolkit \
      python3-pyparsing \
      python3-setuptools \
      python3-termcolor \
      sudo \
      zeroc-ice-all-dev \
      zeroc-icebox \
  && rm -rf /var/lib/apt/lists/*

# Some incompatibility from pyside2 (5.15) and default qt installation (5.14)
RUN sudo pip3 install PySide2==5.14.2 rich

RUN export uid=1000 gid=1000 && \
    mkdir -p /home/robolab && \
    echo "robolab:x:${uid}:${gid}:Robolab,,,:/home/robolab:/bin/bash" >> /etc/passwd && \
    echo "robolab:x:${uid}:" >> /etc/group && \
    echo "robolab:robolab"|chpasswd && \
    echo "robolab ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/robolab-user && \
    chown ${uid}:${gid} -R /home/robolab 

USER robolab
WORKDIR /home/robolab/
# Install Robocomp
CMD echo $FORCE
RUN git clone https://github.com/robocomp/robocomp.git

RUN cd robocomp && mkdir build && cd build && cmake .. && make -j$(nproc) && sudo make install
RUN sudo sh -c "echo '/opt/robocomp/lib/' >> /etc/ld.so.conf"
RUN sudo ldconfig
WORKDIR robocomp
ENV PATH=$PATH:/opt/robocomp/bin/
ENV ROBOCOMP=~/robocomp
RUN git annex get \
  files/innermodel/simpleworld.xml \
  files/osgModels/textures/wood.jpg \ 
  files/innermodel/tar36h11-*.png \
  files/osgModels/textures/Metal.jpg \
  files/osgModels/robex/robex.ive
RUN cp -r -L files /home/robolab/files 2>/dev/null || :


# docker build -f Dockerfile.dev_full -t robocomp/robocomp:focal_dev .
# docker run -v /tmp/.X11-unix:/tmp/.X11-unix --env="DISPLAY=$DISPLAY" -it robocomp:focal_dev bash
